seccomp sandbox to run QEMU

1. Build below program.

$ gcc seccomp_sandbox.c -o seccomp_sandbox -lseccomp

$ cat seccomp_sandbox.c 
#include <unistd.h>
#include <errno.h>
#include <seccomp.h>
#include <linux/seccomp.h>
 
int main(int argc, char **argv)
{
    char * str = "/bin/bash";
    scmp_filter_ctx ctx;
    ctx = seccomp_init(SCMP_ACT_ALLOW);
    seccomp_rule_add(ctx, SCMP_ACT_ERRNO(EIO), SCMP_SYS(mbind), 0);
    seccomp_load(ctx);
 
    syscall(59, str, NULL, NULL);
    return 0;
}


2. Enable the sandbox and fail mbind system call on purpose.

$ ./seccomp_sandbox

3. Run below QEMU command line.

$ qemu-system-x86_64 -machine type=pc,accel=kvm \
-hda ol7.qcow2 -m 8G -monitor stdio -vnc :0 \
-object memory-backend-ram,size=4G,id=ram-node0,policy=bind,host-nodes=0 \
-object memory-backend-ram,size=4G,id=ram-node1,policy=bind,host-nodes=1 \
-numa node,nodeid=0,memdev=ram-node0 \
-numa node,nodeid=1,memdev=ram-node1 \
-smp cpus=8,sockets=2,cores=4,threads=1 \
-numa cpu,node-id=0,socket-id=0 \
-numa cpu,node-id=1,socket-id=1


4. There will be below error.

qemu-system-x86_64: -object memory-backend-ram,size=4G,id=ram-node0,policy=bind,host-nodes=0: cannot bind memory to host NUMA nodes: Input/output error
