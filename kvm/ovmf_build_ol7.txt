This is about how to build and use ovmf on Oracle Linux.

1. Install some prerequisite packages including below:

- libuuid-devel
- uuid-devel
- acpica-tools
- nasm

The gcc version is gcc-10.2.1.

2. Download the source code. The commit used by this tutorial is 079a58276b98 ("OvmfPkg/AmdSev/SecretPei: Mark SEV launch secret area as reserved").

# git clone https://github.com/tianocore/edk2

3. Download submodule.

# git submodule update --init

4. Compile base tools.

# make -C BaseTools

5. Set up build environment

# . edksetup.sh

Modify Conf/target.txt ...

- ACTIVE_PLATFORM into OvmfPkg/OvmfPkgX64.dsc
- TOOL_CHAIN_TAG into GCC5
- TARGET_ARCH into X64

6. Run 'build'.

# build
Build environment: Linux-5.4.17-2102.206.1.el7uek.x86_64-x86_64-with-oracle-7.9
Build start time: 05:22:51, Jan.05 2022

WORKSPACE        = /home/opc/ext4/edk2
EDK_TOOLS_PATH   = /home/opc/ext4/edk2/BaseTools
CONF_PATH        = /home/opc/ext4/edk2/Conf
PYTHON_COMMAND   = /usr/bin/python3.6


Processing meta-data .
Architecture(s)  = X64
Build target     = DEBUG
Toolchain        = GCC5

Active Platform          = /home/opc/ext4/edk2/OvmfPkg/OvmfPkgX64.dsc
... ...
... ...

7. The outputs are at below locations.

- Build/OvmfX64/DEBUG_GCC5/FV/OVMF_CODE.fd
- Build/OvmfX64/DEBUG_GCC5/FV/OVMF_VARS.fd

Copy them to local locations and boot an UEFI-based VM.

# qemu-system-x86_64 -smp 16 -m 32G -enable-kvm -cpu host -vnc :7 \
-net nic -net user,hostfwd=tcp::5027-:22 -hda /home/opc/ext4/ol7.qcow2 \
-drive if=pflash,format=raw,unit=0,file=OVMF_CODE.fd,readonly=on \
-drive if=pflash,format=raw,unit=1,file=OVMF_VARS.fd \
-serial stdio

8. To use Secure Boot, please build with below.

# build -DSECURE_BOOT_ENABLE=TRUE

9. To debug via serial console, edit "OvmfPkg/OvmfPkgX64.dsc" and change below ...

gEfiMdePkgTokenSpaceGuid.PcdDebugPrintErrorLevel|0x8000004F

... to ...

gEfiMdePkgTokenSpaceGuid.PcdDebugPrintErrorLevel|0xFFFFFFFF

... and then ...

# build -DDEBUG_ON_SERIAL_PORT=TRUE

The below is from serial console.

SecCoreStartupWithStack(0xFFFCC000, 0x820000)
SEC: Normal boot
DecompressMemFvs: OutputBuffer@A00000+0xCE0090 ScratchBuffer@1700000+0x10000 PcdOvmfDecompressionScratchEnd=0x1710000
Register PPI Notify: DCD0BE23-9586-40F4-B643-06522CED4EDE
Install PPI: 8C8CE578-8A3D-4F1C-9935-896185C32DD3
Install PPI: 5473C07A-3DCB-4DCA-BD6F-1E9689E7349A
The 0th FV start address is 0x00000820000, size is 0x000E0000, handle is 0x820000
Register PPI Notify: 49EDB1C1-BF21-4761-BB12-EB0031AABB39
Register PPI Notify: EA7CA24B-DED5-4DAD-A389-BF827E8F9B38
Install PPI: B9E0ABFE-5979-4914-977F-6DEE78C278A6
Install PPI: DBE23AA9-A345-4B97-85B6-B226F1617389
DiscoverPeimsAndOrderWithApriori(): Found 0x7 PEI FFS files in the 0th FV
Evaluate PEI DEPEX for FFS(9B3ADA4F-AE56-4C24-8DEA-F03B7558AE50)
  RESULT = TRUE (Apriori)
Loading PEIM 9B3ADA4F-AE56-4C24-8DEA-F03B7558AE50
Loading PEIM at 0x0000082B7C0 EntryPoint=0x0000082E821 PcdPeim.efi
Install PPI: 06E81C58-4AD7-44BC-8390-F10265F72480
Install PPI: 01F34D25-4DE2-23AD-3FF3-36353FF323F1
Install PPI: 4D8B155B-C059-4C8F-8926-06FD4331DB8A
Install PPI: A60C6B59-E459-425D-9C69-0BCC9CB27D81
Register PPI Notify: 605EA650-C65C-42E1-BA80-91A52AB618C6
Evaluate PEI DEPEX for FFS(A3610442-E69F-4DF3-82CA-2360C4031A23)


References:

https://wiki.ubuntu.com/UEFI/EDK2
https://edk2-devel.narkive.com/6BRVus92/edk2-qestion-about-how-to-debug-ovmf-on-qemu
